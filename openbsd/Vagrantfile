# -*- mode: ruby -*-
# vi: set ft=ruby :

unless ENV["JENKINS_URL"] && ENV["JENKINS_SECRET"]
  begin
  require "yaml"
  YAML.load(File.read("credentials.yml")).each_pair { |k,v| ENV[k] = v unless ENV[k] }
  rescue
  end
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.box_version = "1.3.0"
  config.vm.box = "trombik/ansible-openbsd-6.1-amd64"

  # config.vm.base_mac = "08C027D24C08"

  # config.ssh.shell = "sh"
  # config.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true
  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--memory", "1024"]
    vb.customize ["modifyvm", :id, "--cpus", "2"]
    vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
    vb.customize ["modifyvm", :id, "--audio", "none"]
    # If this line is enabled, SSH won't work
  #   vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
  end

  config.vm.provision "file",
    source: "../scripts",
    destination: "~/scripts"

  config.vm.provision "file",
    source: "install-jenkins.sh",
    destination: "~/install-jenkins.sh"

  config.vm.provision "file",
    source: "rc.d.jenkins.sh",
    destination: "~/rc.d.jenkins.sh"

  config.vm.provision "shell",
    inline: <<EOF
    echo "https://fastly.cdn.openbsd.org/pub/OpenBSD" > /etc/installurl
    mv /home/vagrant/scripts /usr/local
    mv /home/vagrant/install-jenkins.sh /usr/local/scripts
    mv /home/vagrant/rc.d.jenkins.sh /etc/rc.d/jenkins
    chown -R root /usr/local/scripts /etc/rc.d/jenkins
    rcctl enable jenkins
EOF

  jenkins_version = "3.9"
  jenkins_url = "http://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/#{jenkins_version}/remoting-#{jenkins_version}.jar"

  require 'open-uri'
  config.vm.provision "shell",
    path: "install-jenkins.sh",
    env: {
      "JENKINS_HOME" => "/home/jenkins",
      "JENKINS_SLAVE_VERSION" => jenkins_version,
      "JENKINS_SLAVE_URL" => jenkins_url,
      "JENKINS_SLAVE_SHA" => open("#{jenkins_url}.sha1").read,
      "JENKINS_SLAVE_PATH" => "/usr/share/jenkins/slave.jar",
      "JENKINS_SECRET" => ENV["JENKINS_SECRET"],
      "JENKINS_URL" => ENV["JENKINS_URL"],
      "JENKINS_TUNNEL" => "",
      "JNLP_PROTOCOL_OPTS" => ""
    }

  config.vm.provision "shell",
    inline: <<EOF
    rcctl start jenkins
EOF

end
